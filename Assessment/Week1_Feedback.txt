Starting weekly assessment for Rachel, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 19.33 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Week6, Week1, Week7, Assessment, HPC, Week5, Week2, Week4, .git, Week3, Project, MiniProject

Found the following files in parent directory: README.txt, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:
**********************************************************************
*~ 
*.tmp
*.aux 
*.dvi 
*.log 
*.nav 
*.out 
*.snm 
*.toc
*py[cod] 
*.class
_pycache_
*.pyc
*.bbl
*.blg
-
.ipynb_checkpoints
*.synctex.gz
**********************************************************************

Found README in parent directory, named: README.txt

Printing contents of README.txt:
**********************************************************************
My CMEE Coursework Repository
Created by Rachel Bates 02/10/18

A repository containing all code and example data from a 9 week intro to biological computing masters. 

Week 1:		Introduction to Unix, LaTeX and Shell Scripting
Week 2:		Introduction to Python3
Week 3:		Introduction to R
Week 4:		Stats in R
Week 5:		GIS in QGIS
Week 6:		Genomics and Bioinformatics
Week 7:		Python 2
Week 8:		MiniProject: Model fitting miniproject
Week 9: 	HPC: High Performance Computing Week
Assessment: 	Outputs from an auto assessing Python script
Project:	Initial work for the MRes research project

Languages used:
- Bash
- LaTeX
- R
- Python 3

Specific versions used are specified within individual sub-directories' README documents. The README also contains details of any packages needed to run those scripts (none needed if none specified).

Directory structures for each week will be as follows (may change slightly depending on the content of the week):
Code:	 	All code
Data:		All files to be used as inputs for scripts
Output:		Where any files generated by scripts will be placed
Sandbox: 	Misc files and outputs used while learning and experimenting
**********************************************************************

======================================================================
Looking for the weekly directories...

Found 7 weekly directories: Week1, Week2, Week3, Week4, Week5, Week6, Week7

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Code, Data, Output, Sandbox

Found the following files: README.txt

Checking for readme file in weekly directory...

Found README in parent directory, named: README.txt

Printing contents of README.txt:
**********************************************************************
Week one of CMEE coursework
AUTHOR: Rachel Bates
CREATED: 02/10/18

This directory contains basic piped code and shell scripts used to learn the linux environment and basic bash commands. It also contains example data and outputs for use with the code.

Bash Version used: 4.3.48(1)

LaTeX Version used: TeX Live 2015

Sub-Directories:

Code:	 	All code (including LaTeX and Bibtex code)
Data:		All files to be used as inputs for scripts
Output:		Where any files generated by scripts will be placed
Sandbox: 	Misc files and outputs used while learning and experimenting


Scripts:

UnixPrac1.txt - contains various piped commands that look at sequence data and recall various counts from it.

Shell Scripts:

Boilerplate.sh - Basic boilerplate file that can be used as a template for other files

CompileLaTeX.sh - Allows a LaTeX script (minus the .tex extension) to be converted to a PDF and a bibtex file of the same name to be added as a bibliography to the document.

ConcatenateTwoFiles - Copies the data from two input files into a singular specified output file, one after the other.

CountLines.sh - Counts the number of lines in a text file

csvtospace.sh - Converts a comma delimited file into a space delimited file and places the output into a new file (this does not alter the original file).

MyExampleScript.sh - Showcases the ability to use variables or manually input text for printed statements.

tabtocsv.sh - Converts a tab delimited file into a comma delimited file and places the output into a new file (this does not alter the original file).

tiff2png.sh - Creates .png versions of any .tif file in the Data directory and places them in the output directory

variables.sh - Uses user inputs to demonstrate the usability of variables.
**********************************************************************

Results directory missing!

Creating Results directory...

Found 12 code files: ConcatenateTwoFiles.sh, Boilerplate.sh, CountLines.sh, variables.sh, CompileLaTeX.sh, tiff2png.sh, csvtospace.sh, FirstExample.tex, MyExampleScript.sh, FirstBiblio.bib, UnixPrac1.txt, tabtocsv.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Rachel Bates RLB18@Imperial.ac.uk
#Script: ConcatenateTwoFiles.sh
#Desc: Adds the contents of two files into one new file
#Arguments: 1-> first imput file 2-> second input file 3-> Output file
#Date: 02.10.18

cat $1 > $3 #Copies file $1 into a new file that is created named $3
cat $2 >> $3 #Adds the contents of file $2 to file $3
echo "Merged File is"
cat $3 #Prints the contents of $3
exit
**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 

**********************************************************************
Merged File is

**********************************************************************

Encountered error:
ConcatenateTwoFiles.sh: line 8: $3: ambiguous redirect
ConcatenateTwoFiles.sh: line 9: $3: ambiguous redirect

======================================================================
Inspecting script file Boilerplate.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Rachel Bates RLB18@Imperial.ac.uk
#Script: boilerplate.sh
#Desc: simple boilerplate for shell scripts
#Arguments: none
#Date: 02.10.18

echo -e "\nThis is a shell script! \n" 
**********************************************************************

Testing Boilerplate.sh...

Output (only first 500 characters): 

**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00653s

======================================================================
Inspecting script file CountLines.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Rachel Bates RLB18@Imperial.ac.uk
#Script: CountLines.sh
#Desc: Counts the number of lines in a file
#Arguments: 1-> file with lines to be counted
#Date: 02.10.18

if [ $# -eq 0 ] #Checks there is an input file
    then
        echo "No input file detected. Please try again"
        exit
    else
        NumLines=`wc -l < $1` #Creates a variable containing the number of lines in a file
        echo "The file $1 has $NumLines lines" #Prints the name of the file and the number of lines within it
fi**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 

**********************************************************************
No input file detected. Please try again

**********************************************************************

Code ran without errors

Time consumed = 0.00345s

======================================================================
Inspecting script file variables.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Rachel Bates RLB18@Imperial.ac.uk
#Script: variables.sh
#Desc: Prompts the user to input some values, stores and displays one and sums the other two
#Arguments: none
#Date: 02.10.18

MyVar='some string' #Creates a variable and gives it the value "some string"
echo 'the current value of the variable is' $MyVar #Prints the contents of MyVar
echo 'Please enter a new string' 
read MyVar #Prompts a user input and replaces "some string" with the user's input
echo 'the current value of the variable is' $MyVar #Prints the new value of MyVar
echo 'enter two numbers separated by space(s)'
read a b #Prompts the user to input two numbers separated by a space and creates two variables, a and b
echo 'you entered' $a 'and' $b '. Their sum is:' #Displays the two new variables
mysum=`expr $a + $b` #Sums the two variables
echo $mysum #Displays the sum of the two variables**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 

**********************************************************************
the current value of the variable is some string
Please enter a new string
the current value of the variable is
enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error:
expr: syntax error

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Rachel Bates RLB18@Imperial.ac.uk
#Script: CompileLaTeX.sh
#Desc: Allows a LaTeX script to be converted to a PDF and a bibtex 
    #file of the same name to be added as a bibliography to the document.
#Arguments: 1 <- LaTeX script minus the .tex extension
#Date: 06.10.18

pdflatex $1.tex
pdflatex $1.tex
bibtex $1
pdflatex $1.tex
pdflatex $1.tex
mv $1.pdf ../Output/
evince ../Output/$1.pdf &

# Cleanup - removes unnessesary files
rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc

**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 

**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 81 language(s) loaded.
File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (pre
**********************************************************************

Encountered error:
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
mv: cannot stat '.pdf': No such file or directory
rm: cannot remove '*~': No such file or directory
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.dvi': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.nav': No such file or directory
rm: cannot remove '*.out': No such file or directory
rm: cannot remove '*.snm': No such file or directory
rm: cannot remove '*.toc': No such file or directory

** (evince:11278): WARNING **: Error when getting information for file '/home/mhasoba/Documents/Teaching/IC_CMEE/2018-19/Coursework/StudentRepos/RachelBates_RLB18/Week1/Output/.pdf': No such file or directory

** (evince:11278): WARNING **: Error setting file metadata: No such file or directory

** (evince:11278): WARNING **: Error setting file metadata: No such file or directory

** (evince:11278): WARNING **: Error setting file metadata: No such file or directory

** (evince:11278): WARNING **: Error setting file metadata: No such file or directory

** (evince:11278): WARNING **: Error setting file metadata: No such file or directory

** (evince:11278): WARNING **: Error setting file metadata: No such file or directory

** (evince:11278): WARNING **: Error setting file metadata: No such file or directory

** (evince:11278): WARNING **: Error setting file metadata: No such file or directory

** (evince:11278): WARNING **: Error setting file metadata: No such file or directory

** (evince:11278): WARNING **: Error setting file metadata: No such file or directory

** (evince:11278): WARNING **: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file tiff2png.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Rachel Bates RLB18@Imperial.ac.uk
#Script: tiff2png.sh
#Desc: Creates .png versions of any .tif file in the Data directory and places them in the output directory
#Arguments: None
#Date: 06.10.18

for f in ../Data/*.tif; 
    do  
        echo "Converting $f"; 
        convert "$f"  "$(basename "$f" .tif).png";
        mv *.png ../Output/ #Moves the created png to the output directory
        echo "Conversion complete, files placed in ../Output/"
    done**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 

**********************************************************************
Converting ../Data/ExampleTiff.tif
Conversion complete, files placed in ../Output/

**********************************************************************

Code ran without errors

Time consumed = 0.19074s

======================================================================
Inspecting script file csvtospace.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Rachel Bates RLB18@Imperial.ac.uk
#Script: csvtospace.sh
#Desc: Converts CSV files to space delimited ones
#Arguments: none
#Date: 02.10.18

if [ $# -eq 0 ]  #Checks there is an input file
    then
        echo "No input file detected. Please try again"
        exit
    else
        echo "Creating a comma delimited verson of $1 ..."
        cat $1 | tr -s "," " " >> $1.txt | mv $1.txt ../Output/
        #Removes the tabs from the file and replaces them with commas. Creates a new csv file named the same as $1.
        #Moves the resulting file into the Output directory
        echo "Done!"
        exit
fi**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 

**********************************************************************
No input file detected. Please try again

**********************************************************************

Code ran without errors

Time consumed = 0.00384s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:
**********************************************************************
%Sample LaTeX document

\documentclass[12pt]{article}
\title{A Simple Document}
\author{Your Name}
\date{}
\begin{document}
  \maketitle

  \begin{abstract}
    This paper must be cool!
  \end{abstract}

  \section{Introduction}
    Blah Blah!

  \section{Materials \& Methods}
  One of the most famous equations is:
  \begin{equation}
    E = mc^2
  \end{equation}
  This equation was first proposed by Einstein in 1905 
  \cite{einstein1905does}.

  \bibliographystyle{plain}
  \bibliography{FirstBiblio}
\end{document}**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Rachel Bates RLB18@Imperial.ac.uk
#Script: MyExampleScript.sh
#Desc: Says Hello to the user by name
#Arguments: none
#Date: 02.10.18

msg1='Hello' #Creates a variable with the value "Hello"
msg2=$USER #Creates a variable that is the same as the current user's name
echo "$msg1 $msg2" #Prints both variables, resulting in "Hello user"
echo "Hello $USER" #Prints "Hello" followed by the user's name**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 

**********************************************************************
Hello mhasoba
Hello mhasoba

**********************************************************************

Code ran without errors

Time consumed = 0.00692s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:
**********************************************************************
#Bibtex reference for example PDF

@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content},
  author={Einstein, Albert},
  journal={Annalen der Physik},
  volume={18},
  number={13},
  pages={639--641},
  year={1905}
}
**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:
**********************************************************************
##########
FASTA Scripts
##########

#1 
	#Prints the line counts for each of the 3 FASTA files
wc -l ../Data/407228326.fasta ../Data/407228412.fasta ../Data/E.coli.fasta 

#######

#2 	
	#Prints the file E.coli.fasta except the header line
tail -n +2 ../Data/E.coli.fasta

######

#3 
	#Prints the sequence length of the E.coli genome by counting the characters in the file
	#Header line and newline characters are removed prior to counting
tail -n +2 ../Data/E.coli.fasta | tr -d '\n' | wc -m

#######

#4 
	#Removes the header line and places the sequence data onto one line. 
	#Then searches for instances of the squence "ATGC", places each instance onto a new line
	#it then counts the number of lines to give a count of the instances.
tail -n +2 ../Data/E.coli.fasta | tr -d '\n' | grep -o "ATGC" | wc -l

#######

#5 Gives the ratio of AT to GC in the E.coli Genome
	#For each of A/T and G/C first the header line and newline characters are removed
	#Then the instances of each character are counted as in #4
	#The number of bases are divided to give a ratio, using bc -l to allow non-integer division
	#Echo is used to print the ratio

echo $(tail -n +2 ../Data/E.coli.fasta | tr -d '\n' | grep -o ["A""T"] | wc -l)/$(tail -n +2 ../Data/E.coli.fasta | tr -d '\n' | grep -o ["G""C"] | wc -l) | bc -l

**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:
**********************************************************************
#!/bin/bash
#Author: Rachel Bates RLB18@Imperial.ac.uk
#Script: tabtocsv.sh
#Desc: sub tabs in a file to commas and saves the output to a csv
#Arguments: 1-> tab delimited file
#Date: 02.10.18

if [ $# -eq 0 ]  #Checks there is an input file
    then
        echo "No input file detected. Please try again"
        exit
    else
        echo "Creating a comma delimited verson of $1 ..."
        cat $1 | tr -s "\t" "," >> $1.csv | mv $1.csv ../Output/
        #Removes the tabs from the file and replaces them with commas. Creates a new csv file named the same as $1.
        #Moves the resulting file into the Output directory
        echo "Done!"
        exit
fi**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 

**********************************************************************
No input file detected. Please try again

**********************************************************************

Code ran without errors

Time consumed = 0.00514s

======================================================================
======================================================================
Finished running scripts

Ran into 3 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 100

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!